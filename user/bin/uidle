#!/usr/bin/env ruby

idlers = `ps -xa | grep uidle | grep -v grep | grep -v #{Process.pid}`.chop
if !idlers.empty?
  idlers.lines.each { |line|
    system('kill', line.match(/(\d+)/)[1])
  }

  system('notify-send', 'uidle stopped')
  exit(0)
end

system('notify-send', 'uidle started')

keys = [
  'ctrl+1',
  'ctrl+2',
  'ctrl+3',
  'ctrl+4',
  'ctrl+5',

  'alt+i',
  'alt+k',
  'alt+j',
  'alt+l',

  'ctrl+i',
  'ctrl+k',
  'ctrl+j',
  'ctrl+l',

  'ctrl+s',

  'ctrl+alt+i',
  'ctrl+alt+k',
  'ctrl+alt+j',
  'ctrl+alt+l',

  'ctrl+period',
  'ctrl+comma',
]

browser_keys = [
  'F5',
  'Up',
  'Down',
  'Left',
  'Right',
  'Prior',
  'Next',
  'Home',
  'End',
  'ctrl+Prior',
  'ctrl+Next',
]

sleep(5)

loop do
  system('upwork-kill-notification')

  value = rand
  if 0 <= value && value < 0.7
    (rand * 7).to_i.times {
      `xdotool key #{keys.sample}`
      sleep(rand * 0.25 + 0.25)
    }
  elsif 0.7 < value && value <= 0.75
    `xdotool key #{['super+2', 'super+3'].sample}`
    `xdotool key #{['alt+1', 'alt+2', 'alt+3', 'alt+4', 'alt+5'].sample}`

    sleep(rand * 3 + 1)

    (rand * 3).to_i.times {
      `xdotool key #{browser_keys.sample}`
      sleep(rand * 0.25 + 0.25)
    }

    sleep(rand * 3 + 3)

    `xdotool key super+1`
  elsif 0.75 < value && value < 0.85
    `xdotool key ctrl+u ctrl+l`
    `xdotool key alt+n`

    2.times {
      `xdotool key #{('a'..'z').to_a.sample}`
    }

    sleep(2)

    `xdotool key KP_Enter`
    `xdotool key Escape`
  elsif 0.75 < value
    initial = `xdotool getmouselocation`.match(/x:(\d+) y:(\d+)/).to_a
    (rand * 5).to_i.times {
      `xdotool mousemove #{rand * 1000} #{rand * 1000}`
      sleep(rand + 0.5)
    }

    `xdotool mousemove #{initial[1]} #{initial[2]} click 1`
    sleep rand + 0.5
  end

  sleep(rand * 9 + 1)
end
