python:
  context: document().languageId == 'python'
  snippets:

    define method:
      trigger: d
      snippet: |
        def $1$container{(self, $2:args)}:
            $0
      placeholders:
        args:
          onBeforeLeave: |-
            ({ placeholders: { container }, debug }) => {
              container.value = container.value.replace(
                /(?<=\w+)\(self,\s*\)$/,
                '(self)'
              );
            };

    print:
      trigger: p
      snippet: print("XXXX $id", $1)
      placeholders:
        id:
          onBeforeExpand: |
            ({ cursor, document }) =>
              require('path').basename(document.uri.fsPath) + ':' +
                cursor.anchor.line

    typings:
      snippets:
        typing optional:
          trigger: to
          snippet: typing.Optional[$1]

        typing float:
          trigger: tf
          snippet: float

        typing int:
          trigger: ti
          snippet: int

        typing str:
          trigger: ts
          snippet: str

        typing bool:
          trigger: tb
          snippet: bool

    controls sequences:
      snippets:
        lambda:
          trigger: la
          snippet: "lambda $1: $0"

        lambda (alias ll):
          trigger: ll
          snippet: "lambda $1: $0"
          auto: true

        return:
          trigger: r
          snippet: return $0

        return none:
          trigger: rn
          snippet: return None

        return false:
          trigger: rf
          snippet: return False

        return true:
          trigger: rt
          snippet: return True

        return result:
          trigger: rr
          snippet: return result

        on blank line:
          context: |
            cursor.precedingText().match('\n\s*\w+$') &&
              cursor.followingText().match('^\s*\n')
          snippets:
            if:
              trigger: i
              snippet: |
                if $1:
                    $0

            if not:
              trigger: in
              snippet: |
                if not $1:
                    $0

            for:
              trigger: "~(?<=^\\s*)f$"
              order: 1
              snippet: |
                for $1:
                    $0

            for in:
              trigger: fi
              snippet: |
                for $1 in $2:
                    $0

    values:
      snippets:
        none:
          trigger: n
          snippet: None
        "false":
          trigger: f
          snippet: "False"
        "true":
          trigger: t
          snippet: "True"

    operators:
      snippets:
        is none:
          trigger: in
          snippet: is None
          context: cursor.precedingText().match('\w\s+\w+$')
        is not none:
          trigger: inn
          snippet: is not None

    len:
      trigger: l
      snippet: len($1)

    self:
      trigger: s
      snippet: self.

    quit:
      trigger: q
      snippet: raise Exception($1{":("})

    raise error:
      trigger: re
      snippet: raise Exception("$1")
