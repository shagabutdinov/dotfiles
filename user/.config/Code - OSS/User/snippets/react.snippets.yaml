typescript:
  context: |
    document().languageId.match("^(type|java)script(react)?$") &&
      document().uri.toString().match("[tj]sx?$") &&
      document().getText().includes('import React')
  snippets:
    hooks:
      snippets:
        useState:
          trigger: us
          snippet: const [$1:name{value}, $setter{setValue}] = useState<$2>($3)
          context: cursor.precedingText().match('\n[ ]*\w+$')
          onExpand:
            command: imports.add
            args:
              value: useState
              from: 'react'
          placeholders:
            name:
              onLeave: |
                ({ placeholders: { name, setter } }) => {
                  setter.value =
                    'set' +
                      name.value.substring(0, 1).toUpperCase() +
                      name.value.substring(1)
                }

        useState shortcut:
          trigger: us
          snippet: useState<$2>($3)
          context: cursor.precedingText().match('\S[ ]+\w+$')
          onExpand:
            command: imports.add
            args:
              value: useState
              from: 'react'

    jsx:
      snippets:
        css:
          trigger: ~(?<=[\w}'"][\s\n]+)c$
          snippet: |-
            css={css`
              $0
            `}

    root:
      snippets:
        styled.div:
          trigger: sd
          snippet: |-
            const $1 = styled$2{.div}`
              $0
            `;
          onExpand:
            command: imports.add
            args:
              value: default
              alias: styled
              from: '@emotion/styled'