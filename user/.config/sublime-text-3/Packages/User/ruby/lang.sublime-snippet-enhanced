<snippets>

	<snippet>
		<content><![CDATA[
self
]]></content>
		<tabTrigger>s</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_128_chars_begin", "operator": "regex_contains", "operand": "[\\w\\(,=:>]\\s*s$"},
			]
		]]></context>
		<description>operators: false</description>
	</snippet>

	<snippet>
		<content><![CDATA[
false
]]></content>
		<tabTrigger>f</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_128_chars_begin", "operator": "regex_contains", "operand": "[\\w\\(,=:>]\\s*f$"},
			]
		]]></context>
		<description>operators: false</description>
	</snippet>

	<snippet>
		<content><![CDATA[
true
]]></content>
		<tabTrigger>t</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_128_chars_begin", "operator": "regex_contains", "operand": "[\\w\\(,=:>]\\s*t$"},
			]
		]]></context>
		<description>operators: true</description>
	</snippet>

	<snippet>
		<content><![CDATA[
nil
]]></content>
		<tabTrigger>n</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_128_chars_begin", "operator": "regex_contains", "operand": "[\\w\\(,=:>]\\s*n$"},
			]
		]]></context>
		<description>operators: nil</description>
		<order>1</order>
	</snippet>


	<snippet>
		<content><![CDATA[
if ${1:$last_assigned_variable}
	${0:$selection}
end
]]></content>
		<tabTrigger>i</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*i$"},
			]
		]]></context>
		<description>operators: if</description>
	</snippet>

	<snippet>
		<content><![CDATA[
if ${0:$selection}
	$1
end
]]></content>
		<commands>
			[
				{"command": "move_to", "args": {"extend": true, "to": "eol"}},
				"RUN",
			]
		</commands>
		<tabTrigger>i</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*i$"},
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		]]></context>
		<description>operators: if</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
elsif ${1:$last_assigned_variable}
	${0:$selection}
]]></content>
		<tabTrigger>ei</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*i$"},
			]
		]]></context>
		<description>operators: elsif</description>
	</snippet>

	<snippet>
		<content><![CDATA[
elsif ${0:$selection}
	$1
]]></content>
		<commands>
			[
				{"command": "move_to", "args": {"extend": true, "to": "eol"}},
				"RUN",
			]
		</commands>
		<tabTrigger>ei</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*i$"},
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		]]></context>
		<description>operators: elsif</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
else ${1:$last_assigned_variable}
	${0:$selection}
]]></content>
		<tabTrigger>el</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*i$"},
			]
		]]></context>
		<description>operators: else</description>
	</snippet>

	<snippet>
		<content><![CDATA[
else ${0:$selection}
	$1
]]></content>
		<commands>
			[
				{"command": "move_to", "args": {"extend": true, "to": "eol"}},
				"RUN",
			]
		</commands>
		<tabTrigger>el</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*i$"},
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		]]></context>
		<description>operators: else</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
if ${1:$last_assigned_variable}.nil?
	${0:$selection}
end
]]></content>
		<tabTrigger>ii</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*ii$"},
			]
		]]></context>
		<description>operators: if not nil</description>
	</snippet>

	<snippet>
		<content><![CDATA[
if ${1:$last_assigned_variable}.empty?
	${0:$selection}
end
]]></content>
		<tabTrigger>ie</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*ie$"},
			]
		]]></context>
		<description>operators: if empty</description>
	</snippet>

	<snippet>
		<content><![CDATA[
if !${1:$last_assigned_variable}
	${0:$selection}
end
]]></content>
		<tabTrigger>in</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*in$"},
			]
		]]></context>
		<description>operators: if not</description>
	</snippet>

	<snippet>
		<content><![CDATA[
if !${0:$selection}
	$1
end
]]></content>
		<commands>
			[
				{"command": "move_to", "args": {"extend": true, "to": "eol"}},
				"RUN",
			]
		</commands>
		<tabTrigger>in</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*in$"},
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		]]></context>
		<description>operators: if not</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
if !${1:$last_assigned_variable}.nil?
	${0:$selection}
end
]]></content>
		<tabTrigger>ini</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*ini$"},
			]
		]]></context>
		<description>operators: if not nil</description>
	</snippet>

	<snippet>
		<content><![CDATA[
if !${1:$last_assigned_variable}.empty?
	${0:$selection}
end
]]></content>
		<tabTrigger>ine</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*ine$"},
			]
		]]></context>
		<description>operators: if empty</description>
	</snippet>

	<snippet>
		<content><![CDATA[
do
	${0:$selection}
end
]]></content>
		<commands>
			[
				{"command": "ensure_space_before"},
				"RUN",
			]
		</commands>
		<tabTrigger>d</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\S.*d$"},
			]
		]]></context>
		<description>operators: do ... end</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
raise $0
]]></content>
		<tabTrigger>ra</tabTrigger>
		<scope>source.ruby</scope>
		<description>operators: raise</description>
	</snippet>

	<snippet>
		<content><![CDATA[
raise $1Error.new($2)
]]></content>
		<tabTrigger>re</tabTrigger>
		<scope>source.ruby</scope>
		<description>operators: raise</description>
	</snippet>

	<snippet>
		<content><![CDATA[
raise "XXXX $TM_FILENAME:$TM_LINE_NUMBER :("
]]></content>
		<tabTrigger>q</tabTrigger>
		<scope>source.ruby</scope>
		<description>operators: raise</description>
	</snippet>

	<snippet>
		<content><![CDATA[
return ${0:$selection__or__last_assigned_variable}
]]></content>
		<commands>
			[
				{"command": "move_to", "args": {"extend": true, "to": "eol"}, "context": [
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"}]},
				"RUN",
			]
		</commands>
		<tabTrigger>r</tabTrigger>
    <scope>source.ruby</scope>
    <description>operators: return</description>
  </snippet>

  <snippet>
		<content><![CDATA[
return result
]]></content>
		<tabTrigger>rr</tabTrigger>
    <scope>source.ruby</scope>
    <description>operators: return</description>
  </snippet>

  <snippet>
		<content><![CDATA[
return nil
]]></content>
		<tabTrigger>rn</tabTrigger>
    <scope>source.ruby</scope>
    <description>operators: return nil</description>
  </snippet>

  <snippet>
		<content><![CDATA[
return false
]]></content>
		<tabTrigger>rf</tabTrigger>
    <scope>source.ruby</scope>
    <description>operators: return false</description>
  </snippet>

  <snippet>
		<content><![CDATA[
return true
]]></content>
		<tabTrigger>rt</tabTrigger>
    <scope>source.ruby</scope>
    <description>operators: return true</description>
  </snippet>

  <snippet>
		<content><![CDATA[
next
]]></content>
		<tabTrigger>n</tabTrigger>
    <scope>source.ruby</scope>
    <description>next</description>
  </snippet>

  <snippet>
		<content><![CDATA[
next false
]]></content>
		<tabTrigger>nf</tabTrigger>
    <scope>source.ruby</scope>
    <description>next false</description>
  </snippet>

  <snippet>
		<content><![CDATA[
next true
]]></content>
		<tabTrigger>nt</tabTrigger>
    <scope>source.ruby</scope>
    <description>next true</description>
  </snippet>

	<snippet>
		<content><![CDATA[
require '$1'
]]></content>
		<tabTrigger>r</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^r$"},
			]
		]]></context>
		<order>1</order>
		<description>def</description>
	</snippet>

	<!-- class -->

	<snippet>
		<content><![CDATA[
class $1
	${0:$selection}
end
]]></content>
		<commands>
			[
				{"command": "ensure_lines_around"},
				"RUN",
			]
		</commands>
		<tabTrigger>c</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*c$"},
			]
		]]></context>
		<description>class</description>
	</snippet>

	<snippet>
		<content><![CDATA[
class $1Error < ${2:Standard}Error; end
]]></content>
		<tabTrigger>ce</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*ce$"},
			]
		]]></context>
		<description>class</description>
	</snippet>

		<snippet>
		<content><![CDATA[
def $1
	${0:$selection}
end
]]></content>
		<commands>
			[
				{"command": "ensure_lines_around"},
				"RUN",
			]
		</commands>
		<tabTrigger>d</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*d$"},
			]
		]]></context>
		<description>def</description>
	</snippet>

	<snippet>
		<content><![CDATA[
($trigger1$0)
]]></content>
		<commands>
			[
				{"command": "move", "args": {"by": "characters", "forward": false}},
				{"command": "ensure_space_before","args": {"space_char": ""}},
				{"command": "move", "args": {"by": "characters", "forward": true}},
				"RUN",
			]
		</commands>
		<triggerRegexp>\s(\w)</triggerRegexp>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "def\\s+\\w+\\s+\\w$"},
			]
		]]></context>
		<description>def</description>
	</snippet>

	<snippet>
		<content><![CDATA[
def initialize $1
	${0:$selection}
end
]]></content>
		<commands>
			[
				{"command": "ensure_lines_around"},
				"RUN",
			]
		</commands>
		<tabTrigger>di</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*di$"},
			]
		]]></context>
		<description>def initialize</description>
	</snippet>

	<snippet>
		<content><![CDATA[
def initialize(*args)
	$0
  return super(*args)
end
]]></content>
		<commands>
			[
				{"command": "ensure_lines_around"},
				"RUN",
			]
		</commands>
		<tabTrigger>dii</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*dii$"},
			]
		]]></context>
		<description>def initialize(*args)</description>
	</snippet>

	<snippet>
		<content><![CDATA[
def self.$1
	${0:$selection}
end
]]></content>
		<commands>
			[
				{"command": "ensure_lines_around"},
				"RUN",
			]
		</commands>
		<tabTrigger>ds</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*ds$"},
			]
		]]></context>
		<description>def</description>
	</snippet>

	<snippet>
		<content><![CDATA[
attr_accessor :$1
]]></content>
		<tabTrigger>aa</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*aa$"},
			]
		]]></context>
		<description>attr_accessor</description>
	</snippet>

	<snippet>
		<content><![CDATA[
attr_reader :$1
]]></content>
		<tabTrigger>ar</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*ar$"},
			]
		]]></context>
		<description>attr_reader</description>
	</snippet>

	<snippet>
		<content><![CDATA[
attr_writer :$1
]]></content>
		<tabTrigger>aw</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*aw$"},
			]
		]]></context>
		<description>attr_writer</description>
	</snippet>

	<snippet>
		<content><![CDATA[
<<~TEXT
	$0
TEXT
]]></content>
		<tabTrigger>T</tabTrigger>
		<scope>source.ruby</scope>
		<description>heredoc</description>
	</snippet>

	<snippet>
		<content><![CDATA[
-> ($1) {
	$0
}
]]></content>
		<tabTrigger>j</tabTrigger>
		<scope>source.ruby</scope>
		<description>proc</description>
	</snippet>

	<snippet>
		<content><![CDATA[
begin
	$0
end
]]></content>
		<tabTrigger>b</tabTrigger>
		<scope>source.ruby</scope>
		<description>begin</description>
	</snippet>

	<snippet>
		<content><![CDATA[
rescue $1 => error
	$0
]]></content>
		<tabTrigger>rs</tabTrigger>
		<scope>source.ruby</scope>
		<description>rescue</description>
	</snippet>

</snippets>