<snippets>

	<snippet>
		<content><![CDATA[
Rails.application.config
]]></content>
		<tabTrigger>rc</tabTrigger>
		<scope>source.ruby</scope>
		<description>rails: application config</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Rails.application
]]></content>
		<tabTrigger>rp</tabTrigger>
		<scope>source.ruby</scope>
		<description>rails: application config</description>
	</snippet>

	<!-- controllers -->

	<snippet>
		<content><![CDATA[
render json: $0
]]></content>
		<tabTrigger>rj</tabTrigger>
		<scope>source.ruby</scope>
		<description>rails: render json success</description>
	</snippet>

	<snippet>
		<content><![CDATA[
ActionController::RoutingError.new('$1')
]]></content>
		<tabTrigger>re</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "raise\\s*re$"},
			]
		]]></context>
		<description>rails: RoutingError</description>
	</snippet>

	<snippet>
		<content><![CDATA[
current_user
]]></content>
		<tabTrigger>cu</tabTrigger>
		<scope>source.ruby</scope>
		<description>rails: current_user</description>
	</snippet>

<snippet>
		<content><![CDATA[
before_action do
	$0
end
]]></content>
		<tabTrigger>ba</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{"key": "filename", "operator": "regex_contains", "operand": "_controller\\.rb$"},
			]
		]]></context>
		<description>rspec: before action</description>
	</snippet>

	<!-- migrations -->

	<snippet>
		<content><![CDATA[
reverting?
]]></content>
		<tabTrigger>r</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: reverting?</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
add_column :${1:table}, :${2:name}, :${3:type}, {
	null: ${4:true},
	default: ${5:nil},
	comment: '$6',
}
]]></content>
		<tabTrigger>ac</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: add_column</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
add_reference :${1:table}, ${2:field}, {
	foreign_key: true,
	null: false,
	comment: '$3',
}
]]></content>
		<tabTrigger>ar</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: add_column</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
change_column :${1:table}, :${2:name}, :${3:type}, {
	null: ${4:true},
	default: ${5:nil},
	comment: '$6',
}
]]></content>
		<tabTrigger>cc</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: add_column</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
remove_column :${1:table}, :${2:name}
]]></content>
		<tabTrigger>rc</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: add_column</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
rename_column :${1:table}, :${2:name}, :${3:newname}
]]></content>
		<tabTrigger>rnc</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: add_column</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
create_table :${1:table}, comment: '$2' do |table|
	$0
end
]]></content>
		<tabTrigger>ct</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: add_column</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
drop_table :${1:table}
]]></content>
		<tabTrigger>dt</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: add_column</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
integer :${1:name}, {
	null: ${2:true},
	default: ${3:nil},
	comment: '$4',
}
]]></content>
		<tabTrigger>i</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "table\\.i$"},
			]
		]]></context>
		<description>rails migrations: integer</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
column :${1:name}, :${2:type}, {
	null: true,
	default: nil,
	comment: '$3',
}
]]></content>
		<tabTrigger>c</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "table\\.c$"},
			]
		]]></context>
		<description>rails migrations: column</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
string :${1:name}, {
	null: true,
	default: nil,
	comment: '$2',
}
]]></content>
		<tabTrigger>s</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.s$"},
			]
		]]></context>
		<description>rails migrations: string</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
text :${1:name}, {
	null: true,
	default: nil,
	comment: '$2',
}
]]></content>
		<tabTrigger>t</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.s$"},
			]
		]]></context>
		<description>rails migrations: text</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
boolean :${1:name}, {
	null: false,
	default: false,
	comment: '$2',
}
]]></content>
		<tabTrigger>t</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.s$"},
			]
		]]></context>
		<description>rails migrations: boolean</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
references :${1:name}, {
	foreign_key: true,
	null: false,
	comment: '$2',
}
]]></content>
		<tabTrigger>r</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.r$"},
			]
		]]></context>
		<description>rails migrations: references</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
add_foreign_key :${1:source}, :${2:target}, on_delete: :cascade
]]></content>
		<tabTrigger>af</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: text</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
add_index :${1:table}, [:${2:column}], unique: true
]]></content>
		<tabTrigger>ai</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: text</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
unique: true,
]]></content>
		<tabTrigger>u</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{
					"key": "preceding_text_begin",
					"operator": "regex_contains",
					"operand": "^\\s*t$",
				},
			]
		]]></context>
		<description>rails migrations: unique</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
default: nil,
]]></content>
		<tabTrigger>d</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{
					"key": "preceding_text_begin",
					"operator": "regex_contains",
					"operand": "^\\s*t$",
				},
			]
		]]></context>
		<description>rails migrations: default</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
table.
]]></content>
		<tabTrigger>t</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
				{
					"key": "preceding_text_begin",
					"operator": "regex_contains",
					"operand": "^\\s*t$",
				},
			]
		]]></context>
		<description>rails migrations: table</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
execute <<-SQL
	$0
SQL
]]></content>
		<tabTrigger>x</tabTrigger>
		<scope>source.ruby</scope>
		<context><![CDATA[
			[
				{
					"key": "begin_512_chars",
					"operator": "regex_contains",
					"operand": "ActiveRecord::Migration",
				},
			]
		]]></context>
		<description>rails migrations: execute</description>
		<order>1</order>
	</snippet>

	<!-- models -->

	<snippet>
		<content><![CDATA[
validates :$1, $0
]]></content>
		<tabTrigger>v</tabTrigger>
		<scope>source.ruby</scope>
		<context>
			[
				{"key": "in_class_definition", "operator": "equal", "operand": true},
			]
		</context>
		<description>rails models: validates</description>
	</snippet>

	<snippet>
		<content><![CDATA[
presence: true
]]></content>
		<commands>
			[
				{"command": "ensure_space_before"},
				"RUN",
			]
		</commands>
		<trigger>p</trigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": ",\\s*p"},
				{"key": "statement", "operator": "regex_contains", "operand": "^validates"},
			]
		</context>
		<description>rails models: validates presence</description>
	</snippet>

	<snippet>
		<content><![CDATA[
inclusion: {in: [$0]}
]]></content>
		<commands>
			[
				{"command": "ensure_space_before"},
				"RUN",
			]
		</commands>
		<trigger>in</trigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": ",\\s*i"},
				{"key": "statement", "operator": "regex_contains", "operand": "^validates"},
			]
		</context>
		<description>rails models: validates inclusion</description>
	</snippet>

	<snippet>
		<content><![CDATA[
has_one :$1
]]></content>
		<commands>
			[
				{"command": "ensure_space_before"},
				"RUN",
			]
		</commands>
		<tabTrigger>ho</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "in_class_definition", "operator": "equal", "operand": true},
			]
		</context>
		<description>rails models: has one</description>
	</snippet>

	<snippet>
		<content><![CDATA[
has_many :$1, dependent: :destroy
]]></content>
		<commands>
			[
				{"command": "ensure_space_before"},
				"RUN",
			]
		</commands>
		<tabTrigger>hm</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "in_class_definition", "operator": "equal", "operand": true},
			]
		</context>
		<description>rails models: has many</description>
	</snippet>

	<snippet>
		<content><![CDATA[
belongs_to :$1
]]></content>
		<commands>
			[
				{"command": "ensure_space_before"},
				"RUN",
			]
		</commands>
		<tabTrigger>bo</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "in_class_definition", "operator": "equal", "operand": true},
			]
		</context>
		<description>rails models: belongs to</description>
	</snippet>

	<snippet>
		<content><![CDATA[
accepts_nested_attributes_for :$1, {allow_destroy: true}
]]></content>
		<commands>
			[
				{"command": "ensure_space_before"},
				"RUN",
			]
		</commands>
		<tabTrigger>an</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "in_class_definition", "operator": "equal", "operand": true},
			]
		</context>
		<description>rails models: accepts_nested_attributes_for</description>
	</snippet>

	<snippet>
		<content><![CDATA[
where($1)
]]></content>
		<tabTrigger>w</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.w$"},
			]
		</context>
		<description>rails models: where</description>
	</snippet>

	<!-- callbacks -->

	<snippet>
		<content><![CDATA[
after_initialize $0
]]></content>
		<tabTrigger>ai</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*ai$"},
			]
		</context>
		<description>rails models: after_initialize</description>
	</snippet>

	<snippet>
		<content><![CDATA[
before_destroy $0
]]></content>
		<tabTrigger>bd</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*bd$"},
			]
		</context>
		<description>rails models: before_destroy</description>
	</snippet>

	<snippet>
		<content><![CDATA[
before_validation $0
]]></content>
		<tabTrigger>bv</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*bv$"},
			]
		</context>
		<description>rails models: before_validation</description>
	</snippet>

	<snippet>
		<content><![CDATA[
after_validation $0
]]></content>
		<tabTrigger>av</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*av$"},
			]
		</context>
		<description>rails models: after_validation</description>
	</snippet>

	<snippet>
		<content><![CDATA[
before_save $0
]]></content>
		<tabTrigger>bs</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*bs$"},
			]
		</context>
		<description>rails models: before_save</description>
	</snippet>

	<snippet>
		<content><![CDATA[
before_create $0
]]></content>
		<tabTrigger>bc</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*bc$"},
			]
		</context>
		<description>rails models: before_create</description>
	</snippet>

	<snippet>
		<content><![CDATA[
after_create $0
]]></content>
		<tabTrigger>ac</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*ac$"},
			]
		</context>
		<description>rails models: after_create</description>
	</snippet>

	<snippet>
		<content><![CDATA[
after_save $0
]]></content>
		<tabTrigger>as</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*as$"},
			]
		</context>
		<description>rails models: after_save</description>
	</snippet>

	<snippet>
		<content><![CDATA[
after_commit $0
]]></content>
		<tabTrigger>aco</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^\\s*aco$"},
			]
		</context>
		<description>rails models: after_commit</description>
	</snippet>

	<snippet>
		<content><![CDATA[
connection.execute($1)
]]></content>
		<tabTrigger>ce</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.ce$"},
			]
		</context>
		<description>rails models: connection execute</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
connection.quote($1)
]]></content>
		<tabTrigger>cq</tabTrigger>
		<scope>source\.ruby\s*$</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.cq$"},
			]
		</context>
		<description>rails models: connection quote</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
to_sql
]]></content>
		<tabTrigger>q</tabTrigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.q$"},
			]
		</context>
		<description>rails models: to_sql</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
where(${1:$selection})
]]></content>
		<tabTrigger>w</tabTrigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.w$"},
			]
		</context>
		<description>rails models: where</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
exists?
]]></content>
		<tabTrigger>w</tabTrigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.w$"},
			]
		</context>
		<description>rails models: exists</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
update(${1:$selection})
]]></content>
		<commands>
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/select_token.sublime-macro"}
				},
				"RUN",
			]
		</commands>
		<tabTrigger>u</tabTrigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.u$"},
			]
		</context>
		<description>rails models: update</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
update!(${1:$selection})
]]></content>
		<commands>
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/select_token.sublime-macro"}
				},
				"RUN",
			]
		</commands>
		<trigger>uu</trigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.uu$"},
			]
		</context>
		<description>rails models: update!</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
create(${1:$selection})
]]></content>
		<commands>
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/select_token.sublime-macro"}
				},
				"RUN",
			]
		</commands>
		<tabTrigger>c</tabTrigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.c$"},
			]
		</context>
		<description>rails models: create</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
create!(${1:$selection})
]]></content>
		<commands>
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/select_token.sublime-macro"}
				},
				"RUN",
			]
		</commands>
		<trigger>cc</trigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.cc$"},
			]
		</context>
		<description>rails models: create!</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
attributes
]]></content>
		<tabTrigger>at</tabTrigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.at$"},
			]
		</context>
		<description>rails models: update!</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
as_json($0)
]]></content>
		<tabTrigger>aj</tabTrigger>
		<scope>source\.ruby</scope>
		<context>
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.aj$"},
			]
		</context>
		<description>rails models: .as_json</description>
	</snippet>

	<snippet>
		<content><![CDATA[
errors.add(:${1:field}, '${2:message}')
]]></content>
		<tabTrigger>ea</tabTrigger>
		<scope>source\.ruby</scope>
		<description>rails models: errors.add</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Rails.logger
]]></content>
		<tabTrigger>rl</tabTrigger>
		<scope>source\.ruby</scope>
		<description>rails logger: logger</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Rails.logger.debug($1)
]]></content>
		<tabTrigger>ld</tabTrigger>
		<scope>source\.ruby</scope>
		<description>rails logger: debug</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Rails.logger.info($1)
]]></content>
		<tabTrigger>li</tabTrigger>
		<scope>source\.ruby</scope>
		<description>rails logger: info</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Rails.logger.warning($1)
]]></content>
		<tabTrigger>lw</tabTrigger>
		<scope>source\.ruby</scope>
		<description>rails logger: warning</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Rails.logger.error($1)
]]></content>
		<tabTrigger>le</tabTrigger>
		<scope>source\.ruby</scope>
		<description>rails logger: logger</description>
	</snippet>

	<snippet>
		<content><![CDATA[
as_json(
	only: [
		:id,
		:name,$1
	],
)
]]></content>
		<tabTrigger>j</tabTrigger>
		<scope>source\.ruby</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\s*\\.j$"},
			]
		]]></context>
		<description>rails: as_json</description>
	</snippet>

</snippets>