[
  {
    "keys": ["ctrl+n", "ctrl+d"],
    "command": "open_file",
    "args": {
      "file": "/home/leo/.config/balmora/conf.d/dotfiles.variables.conf"
    },
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "overlay_visible", "operator": "equal", "operand": false}
    ],
  },

  {
    "keys": ["delete"],
    "command": "next_field",
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "has_next_field", "operator": "equal", "operand": true},
    ]
  },

  {
    "keys": ["alt+shift+9"],
    "command": "set_layout",
    "args": {
      "cells": [[0, 0, 1, 1]],
      "cols": [0.0, 1.0],
      "rows": [0.0, 1.0],
    },
  },

  {
    "keys": ["alt+shift+8"],
    "command": "set_layout",
    "args": {
      "cells": [[0, 0, 1, 1]],
      "cols": [0.0, 1.0],
      "rows": [0.0, 1.0],
    },
  },

  {
    "keys": ["alt+shift+7"],
    "command": "set_layout",
    "args": {
      "cells": [[0, 0, 1, 1]],
      "cols": [0.0, 1.0],
      "rows": [0.0, 1.0],
    },
  },

  {
    "keys": ["ctrl+u", "tab"],
    "command": "open_file",
    "args": {
      "file": "/home/leo/projects/personal/log.txt"
    },
  },

  // KeymapEnhanced:
  // Should be in User/Default ().sublime-keymap to avoid conflicts with
  // terminal plugin

  {
    "keys": ["ctrl+shift+t"],
    "command": "reopen_last_file"
  },

  // JointStatement:
  // Next two mappings should be in User/Default ().sublime-keymap to avoid
  // conflicts with terminal plugin

  {
    "keys": ["ctrl+alt+shift+t"],
    "command": "unjoin_statement",
    "args": {
      "as_arguments": false
    },
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "in_arguments", "operator": "equal", "operand": false}
    ]
  },

  {
    "keys": ["ctrl+alt+shift+t"],
    "command": "unjoin_statement",
    "args": {
      "as_arguments": true
    },
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "in_arguments", "operator": "equal", "operand": true}
    ]
  },

  // Expression:
  // should be in User/Default ().sublime-keymap to avoid [ctrl+k, ...] calls
  {
    "keys": ["ctrl+k"],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Expression/macro/goto_block_down.sublime-macro"
    },
  },

  // Case Conversion

  {
    "keys": ["ctrl+u", "ctrl+-"],
    "command": "convert_to_snake"
  },

  {
    "keys": ["ctrl+u", "ctrl+="],
    "command": "convert_to_camel"
  },

  // Inc-Dec-Value

  {
    "keys": ["ctrl+="],
    "command": "inc_dec_value",
    "args": {
      "action": "inc_min"
    }
  },

  {
    "keys": ["ctrl+-"],
    "command": "inc_dec_value",
    "args": {
      "action": "dec_min"
    }
  },

  {
    "keys": ["ctrl+shift+="],
    "command": "inc_dec_value",
    "args": {
      "action": "inc_max"
    }
  },

  {
    "keys": ["ctrl+shift+-"],
    "command": "inc_dec_value",
    "args": {
      "action": "dec_max"
    }
  },

  {
    "keys": ["ctrl+alt+="],
    "command": "inc_dec_value",
    "args": {
      "action": "inc_all"
    }
  },

  {
    "keys": ["ctrl+alt+-"],
    "command": "inc_dec_value",
    "args": {
      "action": "dec_all"
    }
  },

  // MoveTab

  {
    "keys": ["ctrl+shift+,"],
    "command": "move_tab",
    "args": {
      "position": "-1"
    }
  },

  {
    "keys": ["ctrl+shift+."],
    "command": "move_tab",
    "args": {
      "position": "+1"
    }
  },

  // ColorSchemeSelector

  {
    "keys": ["ctrl+u", "ctrl+t"],
    "command": "select_color_scheme"
  },

  // Open Search Result

  {
    "keys": ["enter"],
    "command": "open_search_result",
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "selector", "operator": "equal", "operand": "text.find-in-files"}
    ]
  },

  // Duplicate Lines

  {
    "keys": ["ctrl+d"],
    "command": "duplicate_lines",
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "overlay_visible", "operator": "equal", "operand": false},
      {"key": "is_search_panel_enhanced_visible", "operator" : "equal", "operand": false}
    ],
  },

  // MarkdownPreview

  {
    "keys": ["ctrl+u", "m"],
    "command": "markdown_preview",
    "args": {
      "target": "browser",
      "parser":"github"
    }
  },

  // GoSublime
  {
    "keys": ["f4"],
    "command": "gs_palette",
    "args": {"palette": "imports", "direct": true},
    "context": [{ "key": "selector", "operator": "equal", "operand": "source.go" }]
  },

  {
    "keys": ["alt+]"],
    "command": "focus_neighboring_group",
  },

  {
    "keys": ["alt+["],
    "command": "focus_neighboring_group",
    "args": {"forward": false},
  },

  {
    "keys": ["ctrl+alt+n"],
    "command": "show_overlay",
    "args": {
      "overlay": "goto",
      "text": "@",
    },
  },

  {
    "keys": ["ctrl+n", "ctrl+e"],
    "command": "enumerate",
  },

  // in absecense of this item ctrl+n should be pressed two time in order to
  // create folder
  {
    "keys": ["ctrl+n"],
    "command": "create_folder_in_list",
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "search_panel_name", "operator": "regex_contains", "operand": "folder_files"}
    ]
  },

  {
    "keys": ["ctrl+f"],
    "command": "display_search_panel_enhanced",
    "args": {
      "type": "fuzzy"
    },
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "overlay_visible", "operator": "equal", "operand": false}
    ],
  },

  {
    "keys": ["ctrl+shift+h"],
    "command": "goto_indentation",
    "args": {
      "type": "lesser_or_equal",
      "change": true,
      "use_empty_line": true,
      "before": 1,
      "before_if_lesser": true,
      "expand": true,
      "alignment": "right"
    },
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
      {"key": "overlay_visible", "operator": "equal", "operand": false}
    ]
  },

  {
    "keys": ["alt+shift+c"],
    "command": "append_seletion",
    "args": {
      "backward": true,
    },
    "context": [
      {"key": "setting.sublime_enhanced_keybindings", "operator": "equal", "operand": true},
    ]
  },

  {
    "keys": ["ctrl+alt+e"],
    "command": "open_git_branch_switcher",
    "args": {
      "all": true,
    },
    "context": [
      {
        "key": "setting.sublime_enhanced_keybindings",
        "operator": "equal",
        "operand": true,
      },
    ]
  },

  // {
  //   "keys": ["tab"],
  //   "command": "hayaku",
  //   "context": [
  //     {"key": "hayaku_css_context"},
  //   ]
  // }

  // hayaku copied styles

  // // Main Hayaku context
  //     {
  //         "keys": ["tab"],
  //         "command": "hayaku",
  //         "context": [{"key": "hayaku_css_context"}]
  //     }

  //     // tab or enter at the end of a line should jump to a correct line
  //     , {
  //         "keys": ["tab"],
  //         "command": "hayaku_add_line",
  //         "context": [
  //             {"key": "hayaku_add_line"},
  //             {"key": "hayaku_at_css"},
  //             {"key": "hayaku_single_caret"}
  //         ]
  //     }
  //     , {
  //         "keys": ["enter"],
  //         "command": "hayaku_add_line",
  //         "context": [
  //             {"key": "auto_complete_visible", "operand": false},
  //             {"key": "hayaku_add_line"},
  //             {"key": "hayaku_at_css"},
  //             {"key": "hayaku_single_caret"}
  //         ]
  //     }

  //     // Temporary fix for the semicolon inserting (bad bad whitespace after)
  //     , { "keys": [":"], "command": "insert_snippet", "args": {"contents": ":$0"}, "context":
  //         [
  //             { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
  //             { "key": "hayaku_at_css" },
  //             { "key": "hayaku_single_caret" },
  //             { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\}|$)", "match_all": true }
  //         ]
  //     }

  //     // Temporary inline comment for CSS (would be replaced by a more useful command)
  //     , {
  //         "keys": ["/","/"],
  //         "command": "insert_snippet",
  //         "args": {"contents": "/* ${1} */$0"},
  //         "context": [
  //             { "key": "selector", "operator": "equal", "operand": "source.css -comment.block.css -punctuation.section.function.css -string.quoted", "match_all": true },
  //             { "key": "setting.hayaku_CSS_disable_inline_comment", "operator": "not_equal", "operand": true }
  //         ]
  //     }

  //     // Command for inserting CSS code block
  //     , {
  //         "keys":    ["ctrl+enter"],
  //         "command":  "hayaku_add_code_block",
  //         "context": [
  //             {"key": "hayaku_add_code_block"},
  //             {"key": "hayaku_at_css"},
  //             {"key": "hayaku_single_caret"}
  //         ]
  //     }

  //     // Command for inserting right indent for code block by enter in braces
  //     , {
  //         "keys":    ["enter"],
  //         "command":  "hayaku_expand_code_block",
  //         "context": [
  //             {"key": "hayaku_at_css"},
  //             {"key": "hayaku_single_caret"},
  //             {"key": "preceding_text", "operator": "regex_match", "operand": ".*\\{$" },
  //             {"key": "following_text", "operator": "regex_match", "operand": "^\\}" }
  //         ]
  //     },

  //     // Commands to jump out of multiple selections in CSS
  //     {
  //         "keys": ["up"],
  //         "command": "clear_fields",
  //         "context": [
  //             {"key": "has_next_field", "operator": "equal", "operand": true},
  //             {"key": "hayaku_at_css"},
  //             {"key": "hayaku_going_up"}
  //         ]
  //     },
  //     {
  //         "keys": ["down"],
  //         "command": "clear_fields",
  //         "context": [
  //             {"key": "has_next_field", "operator": "equal", "operand": true},
  //             {"key": "hayaku_at_css"},
  //             {"key": "hayaku_going_down"}
  //         ]
  //     },

  //     // Cycling values
  //     {
  //         "keys": ["alt+up"],
  //         "command": "hayaku_cycling_through_values",
  //         "args": {"modifier": 1},

  //         "context": [{"key": "setting.hayaku_use_default_cycling_keymaps", "operator": "equal", "operand": true }]
  //     },
  //     {
  //         "keys": ["alt+down"],
  //         "command": "hayaku_cycling_through_values",
  //         "args": {"modifier": -1},

  //         "context": [{"key": "setting.hayaku_use_default_cycling_keymaps", "operator": "equal", "operand": true }]
  //     },
  //     {
  //         "keys": ["alt+ctrl+up"],
  //         "command": "hayaku_cycling_through_values",
  //         "args": {"modifier": 0.1},

  //         "context": [{"key": "setting.hayaku_use_default_cycling_keymaps", "operator": "equal", "operand": true }]
  //     },
  //     {
  //         "keys": ["alt+ctrl+down"],
  //         "command": "hayaku_cycling_through_values",
  //         "args": {"modifier": -0.1},

  //         "context": [{"key": "setting.hayaku_use_default_cycling_keymaps", "operator": "equal", "operand": true }]
  //     },
  //     {
  //         "keys": ["alt+shift+up"],
  //         "command": "hayaku_cycling_through_values",
  //         "args": {"modifier": 10},

  //         "context": [{"key": "setting.hayaku_use_default_cycling_keymaps", "operator": "equal", "operand": true }]
  //     },
  //     {
  //         "keys": ["alt+shift+down"],
  //         "command": "hayaku_cycling_through_values",
  //         "args": {"modifier": -10},

  //         "context": [{"key": "setting.hayaku_use_default_cycling_keymaps", "operator": "equal", "operand": true }]
  //     }
]