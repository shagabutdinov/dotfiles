<snippets>

	<snippet>
		<content><![CDATA[
null
]]></content>
		<commands>
			[
				"RUN",
				{"command": "add_semicolon_to_statement"},
			]
		</commands>
		<tabTrigger>n</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "[\\w=,(]\\s*$"},
			]
		]]></context>
		<description>lang: null</description>
	</snippet>

	<snippet>
		<content><![CDATA[
true
]]></content>
		<commands>
			[
				"RUN",
				{"command": "add_semicolon_to_statement"},
			]
		</commands>
		<tabTrigger>t</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "[\\w=,(]\\s*$"},
			]
		]]></context>
		<description>lang: true</description>
	</snippet>

	<snippet>
		<content><![CDATA[
false
]]></content>
		<commands>
			[
				"RUN",
				{"command": "add_semicolon_to_statement"},
			]
		</commands>
		<tabTrigger>false</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "[\\w=,(]\\s*$"},
			]
		]]></context>
		<description>lang: false</description>
	</snippet>

	<snippet>
		<content><![CDATA[
success
]]></content>
		<commands>
			[
				"RUN",
				{"command": "add_semicolon_to_statement"},
			]
		</commands>
		<tabTrigger>s</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.s$"},
			]
		]]></context>
		<description>lang: success</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
return $0;
]]></content>
		<tabTrigger>r</tabTrigger>
		<scope>source.js</scope>
		<description>lang: return</description>
	</snippet>

	<snippet>
		<content><![CDATA[
return $0;
]]></content>
		<commands>
			[
				{"command": "move_to", "args": {"extend": true, "to": "eol"}},
				"RUN",
			]
		</commands>
		<tabTrigger>r</tabTrigger>
		<scope>source.js</scope>
		<context>
			[
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		</context>
		<description>lang: return</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
then(${0:$selection})
]]></content>
	<commands>
		[
			"RUN",
			{"command": "add_semicolon_to_statement"},
		]
	</commands>
		<tabTrigger>t</tabTrigger>
		<scope>source.js</scope>
		<context>
			[
				{"key": "preceding_128_chars_begin", "operator": "regex_contains", "operand": "\\.\\s*t"},
			]
		</context>
		<description>lang: then</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
then(function($1) {
	${0:$selection}
})
]]></content>
	<commands>
		[
			"RUN",
			{"command": "add_semicolon_to_statement"},
		]
	</commands>
		<tabTrigger>t</tabTrigger>
		<scope>source.js</scope>
		<context>
			[
				{"key": "preceding_128_chars_begin", "operator": "regex_contains", "operand": "\\.\\s*t"},
				{"key": "selection_empty", "operator": "equal", "operand": false},
			]
		</context>
		<description>lang: then with selection</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
then(function($1) {
	$0
}
]]></content>
	<commands>
		[
			"RUN",
			{"command": "add_semicolon_to_statement"},
		]
	</commands>
		<tabTrigger>then(</tabTrigger>
		<scope>source.js</scope>
		<description>lang: then function</description>
	</snippet>

	<snippet>
		<content><![CDATA[
then(function(response
]]></content>
	<commands>
		[
			"RUN",
			{"command": "add_semicolon_to_statement"},
		]
	</commands>
		<tabTrigger>then(function(</tabTrigger>
		<scope>source.js</scope>
		<description>lang: then function response</description>
	</snippet>

	<snippet>
		<content><![CDATA[
function $1($2) {
	$0
}
]]></content>
		<tabTrigger>fn</tabTrigger>
		<scope>source.js</scope>
		<description>lang: function</description>
	</snippet>

	<snippet>
		<content><![CDATA[
function($2) {
	$0
}
]]></content>
		<tabTrigger>fu</tabTrigger>
		<scope>source.js</scope>
		<description>lang: function</description>
	</snippet>

	<snippet>
		<content><![CDATA[
var ${1:$selection__or__last_assigned_variable}
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>v</tabTrigger>
		<scope>source.js</scope>
		<description>json: stringify</description>
	</snippet>

</snippets>