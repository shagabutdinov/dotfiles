<snippets>
	<snippet>
		<content><![CDATA[
import React from 'react';
]]></content>
		<tabTrigger>ir</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^ir$"},
			]
		]]></context>
		<description>react: import react</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
import PropTypes from 'prop-types';
]]></content>
		<tabTrigger>ip</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^ip$"},
			]
		]]></context>
		<description>react: import prop types</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
import styled from '@emotion/styled';
]]></content>
		<tabTrigger>is</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^is$"},
			]
		]]></context>
		<description>react: import styled</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
import { css } from '@emotion/core';
]]></content>
		<tabTrigger>ic</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^ic$"},
			]
		]]></context>
		<description>react: import css</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
import $1 from 'components/Modules/$1';
]]></content>
		<tabTrigger>io</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^io$"},
			]
		]]></context>
		<description>react: import module</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
import React from 'react';
import PropTypes from 'prop-types';

class $1 extends React.Component {
	render() {
		return (
			$0
		);
	}
}

$1.propTypes = {

};

export default $1;

]]></content>
		<tabTrigger>d</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{
					"key": "preceding_text_begin",
					"operator": "regex_contains",
					"operand": "^d$"
				},
			]
		]]></context>
		<description>react: define component</description>
		<order>5</order>
	</snippet>

	<snippet>
		<content><![CDATA[
import React from 'react';
import PropTypes from 'prop-types';

function $1() {
	return (
		$0
	);
}

$1.propTypes = {

};

export default $1;

]]></content>
		<tabTrigger>df</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{
					"key": "preceding_text_begin",
					"operator": "regex_contains",
					"operand": "^df$"
				},
			]
		]]></context>
		<description>react: define component</description>
		<order>5</order>
	</snippet>

	<snippet>
		<content><![CDATA[
constructor(props) {
	super(props);
	$1
}
]]></content>
		<tabTrigger>dc</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{
					"key": "preceding_512_chars_begin",
					"operator": "regex_contains",
					"operand": "React.Component"
				},
			]
		]]></context>
		<description>react: onSubmit</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
render() {
	$0
}
]]></content>
		<tabTrigger>dr</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: define render</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentDidMount() {
	$0
}
]]></content>
		<tabTrigger>ddm</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: define componentDidMount</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillMount() {
	$0
}
]]></content>
		<tabTrigger>dwm</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: define componentWillMount</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentDidUpdate() {
	$0
}
]]></content>
		<tabTrigger>ddu</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: define componentDidUpdate</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillUnmount() {
	$0
}
]]></content>
		<tabTrigger>dwu</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: define componentWillUpdate</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillUpdate($1props, state) {
	$0
}
]]></content>
		<tabTrigger>dwup</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: define componentWillUpdate</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillReceiveProps(props) {
	$0
}
]]></content>
		<tabTrigger>dwr</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: define componentWillReceiveProps</description>
	</snippet>

	<snippet>
		<content><![CDATA[
setState($1)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ss</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.ss$"},
			]
		]]></context>
		<description>react: setState</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
this.setState($1)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ss</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: this.setState</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ts</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: this.state</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>.s</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\W\\.s$"},
			]
		]]></context>
		<description>react: this.state</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ts</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.\\.\\.ts$"},
			]
		]]></context>
		<description>react: this.state</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state.
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ts</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\w"},
			]
		]]></context>
		<order>1</order>
		<description>react: this.state.</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.props
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tp</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: this.props</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.props.
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tp</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "following_text_end", "operator": "regex_contains", "operand": "[^\\s;]"},
			]
		]]></context>
		<order>1</order>
		<description>react: this.props.</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.form
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tf</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: this.form</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.form.
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tf</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		]]></context>
		<order>1</order>
		<description>react: this.form.</description>
	</snippet>

	<snippet>
		<content><![CDATA[
forceUpdate()
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>fu</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.fu"},
			]
		]]></context>
		<description>react: forceUpdate()</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
defaultProps = {
	$0
}
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>dp</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.dp$"},
			]
		]]></context>
		<description>react: defaultProps</description>
	</snippet>

	<snippet>
		<content><![CDATA[
propTypes = {
	$0
};
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semimolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>pt</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.pt$"},
			]
		]]></context>
		<description>react: propTypes</description>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.bool
]]></content>
		<tabTrigger>b</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.bool</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.string
]]></content>
		<tabTrigger>s</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.string</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.number
]]></content>
		<tabTrigger>n</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.number</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.element
]]></content>
		<tabTrigger>e</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.element</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.func
]]></content>
		<tabTrigger>f</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.func</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
isRequired
]]></content>
		<tabTrigger>r</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "PropTypes\\."},
			]
		]]></context>
		<description>react: PropTypes.isRequired</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.arrayOf($1)
]]></content>
		<tabTrigger>a</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.arrayOf</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.object
]]></content>
		<tabTrigger>o</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.object</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.objectOf($1)
]]></content>
		<tabTrigger>ob</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.objectOf</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.instanceOf($1)
]]></content>
		<tabTrigger>i</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.instanceOf</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.shape($1)
]]></content>
		<tabTrigger>sh</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.shape</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.node
]]></content>
		<tabTrigger>no</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.node</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.oneOfType([$1])
]]></content>
		<tabTrigger>oot</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.oneOfType</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
PropTypes.oneOf([$1])
]]></content>
		<tabTrigger>oo</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_512_chars_begin", "operator": "regex_contains", "operand": "\\.propTypes\\s=\\s\\{"},
			]
		]]></context>
		<description>react: PropTypes.oneOf</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
classNames($1)
]]></content>
		<tabTrigger>cn</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: classNames</description>
	</snippet>

	<snippet>
		<content><![CDATA[
const $1 = styled.${2:tag}`
	$0
`;
]]></content>
		<tabTrigger>st</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^st$"},
			]
		]]></context>
		<description>react: styled.tag</description>
	</snippet>

	<snippet>
		<content><![CDATA[
const $1 = styled(${2:func})`
	$0
`;
]]></content>
		<tabTrigger>sf</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^sf$"},
			]
		]]></context>
		<description>react: styled(func)</description>
	</snippet>

	<snippet>
		<content><![CDATA[
const $1 = styled.${2:span}`
  $0
`;
]]></content>
		<tabTrigger>ss</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^ss$"},
			]
		]]></context>
		<description>react: styled.span</description>
		<order>1</order>
	</snippet>


	<snippet>
		<content><![CDATA[
const $1 = styled.div`
  $0
`;
]]></content>
		<tabTrigger>sd</tabTrigger>
		<scope>source.jsx?</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "^sd$"},
			]
		]]></context>
		<description>react: styled.div</description>
	</snippet>

	<snippet>
		<content><![CDATA[
const { $1 } = this.props;
]]></content>
		<tabTrigger>cp</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: const { variable } = this.props</description>
	</snippet>

	<snippet>
		<content><![CDATA[
const [$1, set${2:$1}] = useState($3);
]]></content>
		<tabTrigger>cu</tabTrigger>
		<scope>source.jsx?</scope>
		<description>react: useState</description>
	</snippet>

</snippets>