<snippets>

	<snippet>
		<content><![CDATA[
import Form from 'components/Forms/Form';
]]></content>
		<tabTrigger>if</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{
					"key": "preceding_text_begin",
					"operator": "regex_contains",
					"operand": "^if$"
				},
			]
		]]></context>
		<description>react: import form</description>
	</snippet>

	<snippet>
		<content><![CDATA[
import React from 'react';

export default class $1 extends React.Component {

	render() {
		return (
			$0
		);
	}

}

]]></content>
		<tabTrigger>d</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{
					"key": "preceding_text_begin",
					"operator": "regex_contains",
					"operand": "^d$"
				},
			]
		]]></context>
		<description>react: define component</description>
		<order>5</order>
	</snippet>

	<snippet>
		<content><![CDATA[
constructor(props) {
	super(props)
	$1
}
]]></content>
		<tabTrigger>dc</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{
					"key": "preceding_512_chars_begin",
					"operator": "regex_contains",
					"operand": "React.Component"
				},
			]
		]]></context>
		<description>react: onSubmit</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
render() {
	$0
}
]]></content>
		<tabTrigger>dr</tabTrigger>
		<scope>source.js</scope>
		<description>react: define render</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentDidMount() {
	$0
}
]]></content>
		<tabTrigger>ddm</tabTrigger>
		<scope>source.js</scope>
		<description>react: define componentDidMount</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillMount() {
	$0
}
]]></content>
		<tabTrigger>dwm</tabTrigger>
		<scope>source.js</scope>
		<description>react: define componentWillMount</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentDidUpdate() {
	$0
}
]]></content>
		<tabTrigger>ddu</tabTrigger>
		<scope>source.js</scope>
		<description>react: define componentDidUpdate</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillUnmount() {
	$0
}
]]></content>
		<tabTrigger>dwu</tabTrigger>
		<scope>source.js</scope>
		<description>react: define componentWillUpdate</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillUpdate($1props, state) {
	$0
}
]]></content>
		<tabTrigger>dwup</tabTrigger>
		<scope>source.js</scope>
		<description>react: define componentWillUpdate</description>
	</snippet>

	<snippet>
		<content><![CDATA[
componentWillReceiveProps(props) {
	$0
}
]]></content>
		<tabTrigger>dwr</tabTrigger>
		<scope>source.js</scope>
		<description>react: define componentWillReceiveProps</description>
	</snippet>

	<snippet>
		<content><![CDATA[
setState($1)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ss</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.ss$"},
			]
		]]></context>
		<description>react: setState</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
this.setState($1)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ss</tabTrigger>
		<scope>source.js</scope>
		<description>react: this.setState</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ts</tabTrigger>
		<scope>source.js</scope>
		<description>react: this.state</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>.s</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\W\\.s$"},
			]
		]]></context>
		<description>react: this.state</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ts</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.\\.\\.ts$"},
			]
		]]></context>
		<description>react: this.state</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
this.state.
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ts</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\w"},
			]
		]]></context>
		<order>1</order>
		<description>react: this.state.</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.props
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tp</tabTrigger>
		<scope>source.js</scope>
		<description>react: this.props</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.props.
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tp</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		]]></context>
		<order>1</order>
		<description>react: this.props.</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.form
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tf</tabTrigger>
		<scope>source.js</scope>
		<description>react: this.form</description>
	</snippet>

	<snippet>
		<content><![CDATA[
this.form.
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tf</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "following_text_end", "operator": "regex_contains", "operand": "\\S"},
			]
		]]></context>
		<order>1</order>
		<description>react: this.form.</description>
	</snippet>

	<snippet>
		<content><![CDATA[
forceUpdate()
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>fu</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.fu"},
			]
		]]></context>
		<description>react: forceUpdate()</description>
		<order>2</order>
	</snippet>

</snippets>