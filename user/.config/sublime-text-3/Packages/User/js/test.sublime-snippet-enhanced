<snippets>

	<snippet>
		<content><![CDATA[
describe('$1', () => {
	$0
});
]]></content>
		<tabTrigger>de</tabTrigger>
		<scope>source.js</scope>
		<description>test: describe</description>
	</snippet>

	<snippet>
		<content><![CDATA[
it('$1', () => {
	$0
});
]]></content>
		<tabTrigger>it</tabTrigger>
		<scope>source.js</scope>
		<description>test: it</description>
	</snippet>

	<snippet>
		<content><![CDATA[
assert.equal(${1:$selection__or__last_assigned_variable}, ${2:expected})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ae</tabTrigger>
		<scope>source.js</scope>
		<description>test: assert.equal</description>
	</snippet>

	<snippet>
		<content><![CDATA[
assert.isOk(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ao</tabTrigger>
		<scope>source.js</scope>
		<description>test: assert.isOk</description>
	</snippet>

	<snippet>
		<content><![CDATA[
sinon.stub($0)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ss</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "filename", "operator": "regex_contains", "operand": "Test\\.jsx?$"},
			]
		]]></context>
		<description>test: sinon.stub</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
sinon.spy($0)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>sy</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "filename", "operator": "regex_contains", "operand": "Test\\.jsx?"},
			]
		]]></context>
		<description>test: sinon.spy</description>
	</snippet>

</snippets>