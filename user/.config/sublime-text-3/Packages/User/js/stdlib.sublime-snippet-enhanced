<snippets>

	<snippet>
		<content><![CDATA[
JSON.parse(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"},
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>jp</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: parse</description>
	</snippet>

	<snippet>
		<content><![CDATA[
JSON.stringify(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>js</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: stringify</description>
	</snippet>

	<snippet>
		<content><![CDATA[
alert(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>al</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: alert</description>
	</snippet>

	<snippet>
		<content><![CDATA[
console.log('XXXX $TM_FILENAME:$TM_LINE_NUMBER', ${1:$selection__or__last_assigned_variable})
]]></content>
		<tabTrigger>l</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: console.log</description>
	</snippet>

	<snippet>
		<content><![CDATA[
length
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>l</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.l$"},
			]
		]]></context>
		<description>stdlib: length</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
forEach(${0:$selection})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>e</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.e$"},
			]
		]]></context>
		<description>stdlib: forEach</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
map(${0:$selection})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>m</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.m$"},
			]
		]]></context>
		<description>stdlib: map</description>
	</snippet>

	<snippet>
		<content><![CDATA[
startsWith(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>sw</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.sw$"},
			]
		]]></context>
		<description>stdlib: startsWith</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Object.entries(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>oe</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: Object.entries</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Object.keys(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ok</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: Object.keys</description>
	</snippet>

	<snippet>
		<content><![CDATA[
Object.values(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ov</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: Object.values</description>
	</snippet>

	<snippet>
		<content><![CDATA[
hasOwnProperty(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ho</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.ho$"},
			]
		]]></context>
		<description>stdlib: Object.hasOwnProperty</description>
	</snippet>

	<snippet>
		<content><![CDATA[
parseInt(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>pi</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: parseInt</description>
	</snippet>

	<snippet>
		<content><![CDATA[
parseFloat(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>pf</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: parseFloat</description>
	</snippet>

	<snippet>
		<content><![CDATA[
toString()
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>ts</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.ts$"},
			]
		]]></context>
		<description>stdlib: toString</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
toFixed($1)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tf</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.tf$"},
			]
		]]></context>
		<description>stdlib: toFixed</description>
		<order>3</order>
	</snippet>

	<snippet>
		<content><![CDATA[
includes(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>i</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.i$"},
			]
		]]></context>
		<description>stdlib: toString</description>
		<order>2</order>
	</snippet>

	<snippet>
		<content><![CDATA[
this.$1.bind(this)
]]></content>
		<tabTrigger>b</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: bind</description>
	</snippet>

	<snippet>
		<content><![CDATA[
bind(this)
]]></content>
		<tabTrigger>b</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: bind</description>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.b$"},
			]
		]]></context>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
addEventListener('$1', $2)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>al</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.al$"},
			]
		]]></context>
		<description>stdlib: addEventListener</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
toLowerCase()
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tl</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.tl$"},
			]
		]]></context>
		<description>stdlib: toLowerCase</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
toUpperCase()
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>tu</tabTrigger>
		<scope>source.js</scope>
		<context><![CDATA[
			[
				{"key": "preceding_text_begin", "operator": "regex_contains", "operand": "\\.tu$"},
			]
		]]></context>
		<description>stdlib: toUpperCase</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
currentUser
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>cu</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: currentUser</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
includes(${1:$selection__or__last_assigned_variable})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>iu</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: includes</description>
		<order>1</order>
	</snippet>

	<snippet>
		<content><![CDATA[
window.location.href
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>wl</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: window.location.href</description>
	</snippet>

	<snippet>
		<content><![CDATA[
window.setTimeout($1)
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>so</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: window.location.href</description>
	</snippet>

	<snippet>
		<content><![CDATA[
encodeURIComponent(${1:$selection})
]]></content>
		<commands><![CDATA[
			[
				{
					"command": "run_macro_file_with_context",
					"args": {"file": "Packages/User/macro/add_semicolon_and_select_token.sublime-macro"}
				},
				"RUN",
			]
		]]></commands>
		<tabTrigger>eu</tabTrigger>
		<scope>source.js</scope>
		<description>stdlib: window.location.href</description>
	</snippet>

</snippets>