#!/usr/bin/env ruby

require 'shellwords'
require 'logger'

require 'docopt'
require 'logger/colors'

DebugLog = Logger.new(STDOUT)
ErrorLog = Logger.new(STDERR)

def run(script)
  DebugLog.info(script)
  if ARGS['--dry']
    return nil
  end

  `#{script}`
  return nil
end

doc = <<DOCOPT
Start working on issue.

Usage:
  #{__FILE__} -S [--from <from>] --id <id> [-v] [-d]
  #{__FILE__} -S [--from <from>] --name <name> [-v] [-d]
  #{__FILE__} -h | --help
  #{__FILE__} --version

Options:
  --start -S                Start issue
  --id=<id> -i=<id>         Issue id
  --name=<name> -n=<name>   Issue name
  --from=<from> -f=<from>   Issue source (e.g. origin/master)

  -h --help                 Show this screen
  --version                 Show version
  --verbose -v              Verbose
  --dry -d                  Dry run (without running commands)
DOCOPT

begin
  ARGS = Docopt::docopt(doc)
  if !ARGS['--start']
    raise 'only -S flag is supported'
  end

  name = ARGS['--name'] || "issue_#{ARGS['--id']}"
  if name == 'issue_'
    raise '--name or --id are required'
  end

  from = ARGS['--from'] || 'origin/master'

  run('git fetch --prune')
  if `git branch`.include?(name)
    run("git checkout #{Shellwords.escape(name)}")
    exit(0)
  end

  run("git checkout -b #{Shellwords.escape(name)} #{Shellwords.escape(from)}")
  exit(0)
rescue => error
  ErrorLog.error(error.message)
  if ARGV.include?('-v') || ARGV.include?('--verbose')
    ErrorLog.error(error.class.name)
    ErrorLog.error("\n" + error.backtrace.join("\n"))
  end

  exit(1)
end